!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
NSMAP	draw_trigger_lines.py	/^NSMAP = {'kml': 'http:\/\/www.opengis.net\/kml\/2.2', 'gx' : 'http:\/\/www.google.com\/kml\/ext\/2.2'}$/;"	kind:variable	line:114
NSMAP	generate_kml.py	/^NSMAP = {'kml': 'http:\/\/www.opengis.net\/kml\/2.2', 'gx' : 'http:\/\/www.google.com\/kml\/ext\/2.2'}$/;"	kind:variable	line:106
Point	draw_trigger_lines.py	/^class Point(object):$/;"	kind:class	line:6
RouteStep	draw_trigger_lines.py	/^class RouteStep(object):$/;"	kind:class	line:13
RouteStep	generate_kml.py	/^class RouteStep:$/;"	kind:class	line:5
__init__	draw_trigger_lines.py	/^    def __init__(self, blockId, rating):$/;"	kind:member	line:15
__init__	draw_trigger_lines.py	/^    def __init__(self, longitude, latitude, altitude):$/;"	kind:member	line:8
__init__	generate_kml.py	/^    def __init__(self, blockId, rating):$/;"	kind:member	line:7
__test__	draw_trigger_lines.py	/^__test__ = '-90.59597733915027,41.5042308249657,0 -90.59552213220775,41.5031320159257,0'$/;"	kind:variable	line:125
append_line_style	draw_trigger_lines.py	/^def append_line_style(parent, id, color, width):$/;"	kind:function	line:39
append_line_style	generate_kml.py	/^def append_line_style(parent, id, color, width):$/;"	kind:function	line:31
append_node_with_text	draw_trigger_lines.py	/^def append_node_with_text(parent, tagName, text):$/;"	kind:function	line:24
append_node_with_text	generate_kml.py	/^def append_node_with_text(parent, tagName, text):$/;"	kind:function	line:16
append_style_map	draw_trigger_lines.py	/^def append_style_map(parent, id, normalId, highlightId):$/;"	kind:function	line:45
append_style_map	generate_kml.py	/^def append_style_map(parent, id, normalId, highlightId):$/;"	kind:function	line:37
append_style_map_pair	draw_trigger_lines.py	/^def append_style_map_pair(parent, key, styleId):$/;"	kind:function	line:50
append_style_map_pair	generate_kml.py	/^def append_style_map_pair(parent, key, styleId):$/;"	kind:function	line:42
bikingFolderComp	generate_kml.py	/^bikingFolderComp = create_folder(compilationsFolder, "Biking")$/;"	kind:variable	line:168
bikingFolderPerson	generate_kml.py	/^    bikingFolderPerson = create_folder(personFolder, "Biking")$/;"	kind:variable	line:144
bikingRoutesComp	generate_kml.py	/^bikingRoutesComp = {} # Block ID -> array of ratings$/;"	kind:variable	line:123
bikingRoutesPerson	generate_kml.py	/^bikingRoutesPerson = {} # Person -> array of route steps$/;"	kind:variable	line:122
chunks	draw_trigger_lines.py	/^def chunks(l, n):$/;"	kind:function	line:19
chunks	generate_kml.py	/^def chunks(l, n):$/;"	kind:function	line:11
compilationsFolder	generate_kml.py	/^compilationsFolder = create_folder(document, "Compilations")$/;"	kind:variable	line:130
coordinatesDict	draw_trigger_lines.py	/^coordinatesDict = {}$/;"	kind:variable	line:118
coordinatesDict	generate_kml.py	/^coordinatesDict = {}$/;"	kind:variable	line:110
createTriggerLinePlacemark	draw_trigger_lines.py	/^def createTriggerLinePlacemark(point_x, point_y):$/;"	kind:function	line:133
create_folder	draw_trigger_lines.py	/^def create_folder(parent, name):$/;"	kind:function	line:33
create_folder	generate_kml.py	/^def create_folder(parent, name):$/;"	kind:function	line:25
create_node	draw_trigger_lines.py	/^def create_node(parent, tagName, name):$/;"	kind:function	line:28
create_node	generate_kml.py	/^def create_node(parent, tagName, name):$/;"	kind:function	line:20
create_rating_folder	draw_trigger_lines.py	/^def create_rating_folder(parent, num):$/;"	kind:function	line:36
create_rating_folder	generate_kml.py	/^def create_rating_folder(parent, num):$/;"	kind:function	line:28
dockml	draw_trigger_lines.py	/^dockml = etree.parse('doc.kml')$/;"	kind:variable	line:112
dockml	generate_kml.py	/^dockml = etree.parse('doc.kml')$/;"	kind:variable	line:104
document	generate_kml.py	/^document = create_node(kml, "Document", "Generated by Python")$/;"	kind:variable	line:128
draw_trigger_lines.py	draw_trigger_lines.py	1;"	kind:file	line:1
fill_in_route_steps	draw_trigger_lines.py	/^def fill_in_route_steps(routes, personFolder, person, coordinatesDict):$/;"	kind:function	line:80
fill_in_route_steps	generate_kml.py	/^def fill_in_route_steps(routes, personFolder, person, coordinatesDict):$/;"	kind:function	line:72
folder	draw_trigger_lines.py	/^folder = dockml.xpath("\/\/kml:Folder[.\/kml:name = 'STREETBLOCKS 11\/8\/16']", namespaces = NSMAP)[0]$/;"	kind:variable	line:116
folder	generate_kml.py	/^folder = dockml.xpath("\/\/kml:Folder[.\/kml:name = 'STREETBLOCKS 11\/8\/16']", namespaces = NSMAP)[0]$/;"	kind:variable	line:108
generate_kml.py	generate_kml.py	1;"	kind:file	line:1
kml	generate_kml.py	/^kml = etree.Element('kml', nsmap=NSMAP)$/;"	kind:variable	line:127
parseCsv	draw_trigger_lines.py	/^def parseCsv(filePath, routesPerson, routesComp):$/;"	kind:function	line:55
parseCsv	generate_kml.py	/^def parseCsv(filePath, routesPerson, routesComp):$/;"	kind:function	line:47
personFolder	generate_kml.py	/^    personFolder = create_folder(residentsFolder, person)$/;"	kind:variable	line:141
points	draw_trigger_lines.py	/^points = []$/;"	kind:variable	line:128
populate_compulations	generate_kml.py	/^def populate_compulations(routesComp, rootFolder):$/;"	kind:function	line:149
residentsFolder	generate_kml.py	/^residentsFolder = create_folder(document, "Residents")$/;"	kind:variable	line:129
root	draw_trigger_lines.py	/^root = dockml.getroot()$/;"	kind:variable	line:113
root	generate_kml.py	/^root = dockml.getroot()$/;"	kind:variable	line:105
values	draw_trigger_lines.py	/^    values = item.split(',')$/;"	kind:variable	line:130
walkingFolderComp	generate_kml.py	/^walkingFolderComp = create_folder(compilationsFolder, "Walking")$/;"	kind:variable	line:167
walkingFolderPerson	generate_kml.py	/^    walkingFolderPerson = create_folder(personFolder, "Walking")$/;"	kind:variable	line:143
walkingRoutesComp	generate_kml.py	/^walkingRoutesComp = {} # Block ID -> array of ratings$/;"	kind:variable	line:119
walkingRoutesPerson	generate_kml.py	/^walkingRoutesPerson = {} # Person -> array of route steps$/;"	kind:variable	line:118
